@model WFJ.Models.PlacementReuestsViewModel

@{
    ViewBag.Title = "View Placements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<main>
    @Html.DisplayFor(m => m.ErrorMessage)

    <div class="document-center view-requst">
        <div class="container-fluid site-width">
            <div class="row">
                <div class="col-md-4 col-xl-3">
                    <h4 class="mb-4">@Html.Raw(Model.FormType ?? "&nbsp;")</h4>
                    <div class="card mb-5 mb-md-0">
                        <div class="card-content">
                            <div class="card-body">
                                @Html.Partial("_ViewPlacementsSearch", Model.placementReuestsFilterViewModel)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8 col-xl-9">
                    <h4 class="mb-4 text-md-right">@Html.Raw(Model.ClientName ?? "&nbsp;")</h4>
                    <div class="card">
                        <div class="card-body">
                            @Html.Partial("_RequestsGrid")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>


<!-- Modal -->
<div id="columnPopup" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>




@section scripts{

    <script>
        $('.jdate-picker').daterangepicker({
            autoUpdateInput: true,
            singleDatePicker: true,
            showDropdowns: true,
            autoUpdateInput: false,
            minYear: 2000,
            maxYear: parseInt(moment().format('YYYY'), 10)
        });

        $('.jdate-picker').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY'));
        });

    </script>


    <script>

        var oTable;
        var isFirstTime = true;
        $(document).ready(function () {
            GetDataTable();
        });


        $("#searchBtn").click(function () {
            @*var clientId = $('#ddlClient option:selected').val();
            var formTypeId = $('#ddlFormType option:selected').val();
            //var searchKeyword = $('#txtSearchKeyword').val();
            if (clientId == -1 && formTypeId == -1 && "@userType" != "@((int)UserType.ClientUser)") {// && searchKeyword == "") {
                $('#errormessage').text('Please select atleast one value for search').css("color", "red");
            }
            else {
                $('#errormessage').text('');*@
                GetDataTable();
            //}
        });
        //function SearchByDocumentFilters() {
        //    var clientId = $('#ddlDocumentClient option:selected').val();
        //    var documentTypeId = $('#ddlDocumentType option:selected').val();
        //    var practiceAreaId = $('#ddlPracticeArea option:selected').val();
        //    var categoryId = $('#ddlCategory option:selected').val();
        //    var formTypeId = $('#ddlFormType option:selected').val();
        //    var searchKeyword = $('#txtSearchKeyword').val();
        //    if (clientId == -1 && documentTypeId == -1 && practiceAreaId == -1 && categoryId == -1 && formTypeId == -1 && searchKeyword == "") {
        //        $('#errormessage').text('Please select atleast one value for search').css("color", "red");
        //    }
        //    else {
        //        $('#errormessage').text('');
        //        GetDataTable();
        //    }

        //}

        var editColumn = {
            data: "",
            title: '<i data-toggle="modal" data-target="#columnPopup" class="fa fa-plus"></i>',
            "render": function (row, type, full) {
                return '<a href="/Placements/AddPlacement?formId=@Model.FormID&requestId=' + full.RequestID + '" class="btn btn-sm btn-primary" title="Edit Request"><i class="fa fa-eye"></i></a>';
            }
        };

        var columns = JSON.parse('@Html.Raw(Json.Encode( Model.TableColumns))');
        coluns =  columns.unshift(editColumn);
        console.log(columns)

        function GetDataTable() {

            if ($.fn.DataTable.isDataTable("#myDataTable")) {
                oTable.draw();
            }
            else {

                oTable =
                    $('#myDataTable').DataTable({
                        "bServerSide": true,
                        "sAjaxSource": "/Placements/GetRequestList",
                        "fnServerData": function (sSource, aoData, fnCallback, oSettings) {

                            @*if ("@((int)WFJ.Web.Models.Enums.UserType.SystemAdministrator)" != "@userType" || isFirstTime == false) {*@
                            var colName = oSettings.aoColumns[1].mData;
                            var sDir = oSettings.aaSorting[0][1];
                            var requestor = $('#ddRequestor option:selected').val();
                            var assignedAttorney = $('#ddAssignedTo option:selected').val();
                            var collector = $('#ddCollector option:selected').val();
                            var statusCode = $('#ddStatus option:selected').val();
                            var region = $('#ddRegion option:selected').val();
                            var beginDate = $("#beginDate").val();
                            var endDate = $("#endDate").val();
                            var archived = $("#cboxArchived").is(":checked");

                            aoData.push({ "name": "sortCol", "value": colName });
                            aoData.push({ "name": "sortDir", "value": sDir });

                            aoData.push({ "name": "formId", "value": "@Model.FormID" });
                            aoData.push({ "name": "requestor", "value": requestor });
                            aoData.push({ "name": "assignedAttorney", "value": assignedAttorney });
                            aoData.push({ "name": "collector", "value": collector });
                            aoData.push({ "name": "statusCode", "value": statusCode });
                            aoData.push({ "name": "region", "value": region });
                            aoData.push({ "name": "beginDate", "value": beginDate });
                            aoData.push({ "name": "endDate", "value": endDate });
                            aoData.push({ "name": "archived", "value": archived });
                            aoData.push({ "name": "isFirstTime", "value": isFirstTime });


                            $.ajax({
                                type: "Post",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            });


                            isFirstTime = false;
                        },
                        drawCallback: function () {
                            var pagination = $(this).closest('.dataTables_wrapper').find('.dataTables_paginate');
                            pagination.toggle(this.api().page.info().pages > 1);
                        },
                        "columnDefs": [
                            { "orderable": false, "targets": 0 }
                        ],
                        "columns": columns,
                        //    [
                        //    { "data": "RequestorName", "title": "Requestor Name" },
                        //    { "data": "AssignedAttorneyName" },
                        //    { "data": "CollectorName" },
                        //    { "data": "RequestDate" },
                        //    { "data": "CompletionDate" },
                        //    { "data": "LastViewedDate" },
                        //    { "data": "StatusDescription" },
                        //    { "data": "TotalPaymentsAmount" },
                        //    { "data": "DaysOpen" },
                        //    //{
                        //    //    "mData": "RequestsCount",
                        //    //    "render": function (row, type, full) {
                        //    //        return '<a href="/Placements/ViewPlacements/' + full.ID + '" class="btn btn-sm btn-primary button-icon" title="View Placements">' + full.RequestsCount+'</a>';
                        //    //    }
                        //    //},
                        //    //{
                        //    //    "render": function (row, type, full) {
                        //    //        return '<a href="/Placements/AddPlacement?formId='+full.ID+'" target="_blank" class="btn btn-sm btn-success" title="Add Placement"><i class="fa fa-plus"></i></a>';
                        //    //    },
                        //    //    orderable: false
                        //    //},
                        //],
                        //"order": [[0, "asc"]],
                        bProcessing: true,
                        pageLength: 10,
                        "bFilter": false,
                        "paging": true,
                        //bSearching: false,
                        bLengthChange: true,
                        lengthMenu: [10, 25, 50],
                        "bInfo": true,
                        "language": {
                            "zeroRecords": "no search results (too much data)",
                            //"info": "Page _PAGE_ of _PAGES_",
                            "emptyTable": "no records found",
                            "processing": "Processing... Please wait",
                        }
                    });
            }

        }



    </script>

}