@model WFJ.Models.AddRequestNoteViewModel


<form action="">

    @Html.HiddenFor(x => x.ID, new { @id = "noteId" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="noteDate">Note Date*</label>
                @Html.TextBoxFor(x => x.NotesDate, new { @Class = "form-control", id = "noteDate" })
                @*<input type="text" class="form-control datepicker hasDatepicker" id="noteDate" value="@DateTime.Now.ToString("MM/dd/yyyy")">*@
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Author</label>
                @Html.DropDownListFor(x => x.AuthorID, new SelectList(Model.Authors, "Value", "Text"),"--Select--", new { @Class = "form-control", @id = "noteAuthor" })
            </div>

            <input id="notesDefaultDate" type="hidden" value="@DateTime.Now.ToString("MM/dd/yyyy")" />
        </div>

        <div class="col-md-12">
            <label for="followupDate">Follow Up Date</label>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.TextBoxFor(x => x.FollowupDate, new { @Class = "form-control", id = "followupDate" })
                        @*<input type="text" class="form-control datepicker hasDatepicker" id="followupDate">*@
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.DropDownListFor(x => x.SelectedFollowUpTime, new SelectList(Model.FollowUpTimes, "Value", "Text"), "--Select--", new { @Class = "form-control", @id = "followupTime" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="custom-control custom-checkbox custom-control-inline">

                            <input type="checkbox" class="custom-control-input" id="sendToAuthorsOnly" @(Model.SendToAuthorOnly == 1 ? "checked" : "")>
                            <label class="custom-control-label" for="sendToAuthorsOnly">Send Follow Up Email to Note Author Only</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="form-group">
                <label>Standard Note</label>
                    @Html.DropDownListFor(x => x.StandardNoteId, new SelectList(Model.StandardNotes, "Value", "Text"), "--Select--", new { @Class = "form-control", @id = "standardNotes", onchange= "SetNotes()" })
            </div>
        </div>

        @if (Convert.ToInt32(Session["UserType"]) == (int)WFJ.Service.Model.UserType.SystemAdministrator)
        {
            <div class="col-md-12">
                <div class="form-group">
                    <div class="custom-control custom-checkbox custom-control-inline">
                        <input type="checkbox" class="custom-control-input" id="internalNote" @(Model.internalNote == 1 ? "checked" : "")>
                        <label class="custom-control-label" for="internalNote">Internal Note</label>
                    </div>
                </div>
            </div>
        }

        <div class="col-md-12">
            <div class="form-group">
                <label>Notes*</label>
                @Html.TextAreaFor(x => x.Notes, new { @Class= "form-control", @Rows = "4", @Id = "notesText" })
            </div>
        </div>
    </div>
</form>



