@model WFJ.Models.ManageDocumentFilterViewModel

@{
    string clientDisplay = "";
    string display = "";
    int userType = Convert.ToInt32(Session["UserType"]);
    if ((int)WFJ.Web.Models.Enums.UserType.ClientUser == userType)
    {
        display = "display:none;";
    }
    else
    {
        display = "";
    }
}

<div>
    <span id="errormessage"></span>
    @if ((int)WFJ.Web.Models.Enums.UserType.ClientUser == userType && Model.client.Count < 2)
    {
        clientDisplay = "display:none;";
    }
    <div class="form-group" style="@clientDisplay">
        <label>Client</label>
        @Html.DropDownList("ddlDocumentClient", new SelectList(Model.client, "Value", "Text"), new { @Class = "form-control" })
    </div>

    <div class="form-group">
        <label>Document Type</label>
        @Html.DropDownList("ddlDocumentType", new SelectList(Model.documentType, "Value", "Text"), new { @Class = "form-control" })
    </div>

    <div class="form-group">
        <label for="inputDate">Keyword Search</label>
        <input type="text" id="txtSearchKeyword" class="form-control" />
    </div>

    <div class="form-group">
        <label>Practice Area</label>
        @Html.DropDownList("ddlPracticeArea", new SelectList(Model.practiceArea, "Value", "Text"), new { @Class = "form-control" })
    </div>

    <div class="form-group" style=@display>
        <label>Category (WFJ Use)</label>
        @Html.DropDownList("ddlCategory", new SelectList(Model.categoryDropdown, "Value", "Text"), new { @Class = "form-control" })
       
    </div>

    <div class="form-group">
        <label>Form Type</label>
        @Html.DropDownList("ddlFormType", new SelectList(Model.formTypeDropdown, "Value", "Text"), new { @Class = "form-control" })
    </div>

    <div class="clearfix">
        <span id="AddDocMsg"></span>
        <br />
        <button type="button" onclick="SearchByDocumentFilters();"
                class="btn btn-primary float-right ml-2 mb-2 document-search-btn">
            Search
        </button>
        @*<button type="button" class="btn btn-primary float-right document-search-btn" data-toggle="modal" data-target="#newdocument">*@
        <button type="button" class="btn btn-primary float-right document-search-btn" data-toggle="modal" data-target="" onclick="AddDocument();">
            Enter New Document
        </button>
    </div>

    <!-- Enter new document Modal -->

    <div class="modal fade" id="newdocument" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                        Add Document
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.Partial("~/Views/DocumentCenter/_addEditDocument.cshtml", Model)
                </div>
            </div>
        </div>
    </div>
</div>
@*<script src="~/Content/manageDocument.js"></script>*@

<script>
    function addDocumentSucess(response) {
        if (response.Success) {
            $('#newdocument').modal('hide');
            //$('#AddDocMsg').text("");
            //$('#AddDocMsg').text(response.Message).css("color", "red").show().delay(3000).fadeOut();
            $.notify(response.Message, "success");
            GetDataGrid();
        }
        else {
            $("#ErrorMessages").html("");
            if (response.ErrorMessages) {
                if (response.ErrorMessages.length > 0) {
                    var str = "<ul>"
                    var i;
                    for (i = 0; i < response.ErrorMessages.length; i++) {
                        str = str + "<li>" + response.ErrorMessages[i] + "</li>"
                    }
                    str = str + "</ul>"
                    $("#ErrorMessages").html(str).show().delay(3000).fadeOut();;
                }
            }
            //$('#AddEditDocErrorMsg').text("");
            //$('#AddEditDocErrorMsg').text(response.Message).css("color", "red").show().delay(3000).fadeOut();
             $.notify(response.Message, "error");
        }
    }
</script>

